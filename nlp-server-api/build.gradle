plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.6.7'
    id 'com.google.protobuf' version '0.8.19'

}

group 'hatka.bobrikov.diploma'
version '1.0'

repositories {
    mavenCentral()
}

//Spring
dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa' //Java Persistence API
}

//Data Base
dependencies {
    implementation group: 'org.postgresql', name: 'postgresql'
}

ext {
    protobuf_version = '3.21.2'
    grpc_version = '1.47.0'
    grpc_client_version = '2.13.1.RELEASE'
}

//gRPC
dependencies {
    implementation "io.grpc:grpc-netty:${grpc_version}"
    implementation("net.devh:grpc-client-spring-boot-starter:${grpc_client_version}") {
        exclude group: 'io.grpc', module: 'grpc-netty-shaded'
    }
    implementation group: 'io.grpc', name: 'grpc-stub', version: '1.48.0'
    implementation group: 'org.xolstice.maven.plugins', name: 'protobuf-maven-plugin', version: '0.6.1' //plugin

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobuf_version}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

//Lombok
dependencies {
    compileOnly('org.projectlombok:lombok:1.18.24')
    testCompileOnly('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok:1.18.24')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.24')
}

//Tests

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}